name: Deploy 🚀

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x

      - name: ️🔐 Authorization
        run: |
            dotnet nuget add source \
            --username ${{ github.actor }} \
            --password ${{ secrets.GH_TOKEN }} \
            --store-password-in-clear-text \
            --name github "https://nuget.pkg.github.com/nhanne/index.json"

      - name: ️📁 Build Project
        run: |
          dotnet clean ./ProductService.Api.sln
          dotnet restore ./ProductService.Api.sln
          dotnet build ./ProductService.Api.sln

  publish:
    needs: build
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-24.04
    steps:
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: 🔑 Login to Amazon ECR
        run: aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin ${{ secrets.REPOSITORY }}

      - name: 📦 Build Docker Image
        run: |
          docker build \
            --build-arg GITHUB_USERNAME=${{ github.actor }} \
            --build-arg GITHUB_TOKEN=${{ secrets.GH_TOKEN }} \
            -t "product:ver-$GITHUB_RUN_ID" .
          docker tag "product:ver-$GITHUB_RUN_ID" "${{ secrets.REPOSITORY }}:ver-$GITHUB_RUN_ID"

      - name: 📦 Publish Docker Image to Amazon ECR
        working-directory: ./src/
        run: |
          docker push "${{ secrets.REPOSITORY }}:ver-$GITHUB_RUN_ID"

#   deploy:
#     needs: publish
#     if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
#     runs-on: ubuntu-latest
#     steps:
#       - name: 🛠️ Checkout Repository
#         uses: actions/checkout@v4
#       - name: 🔐 Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-southeast-1
#       - name: 🚀 Deploy to Amazon ECS
#         uses: aws-actions/amazon-ecs-deploy-task-definition@v2
#         with:
#           task-definition: ./deployments/ecs-task-definition.json
#           service: bookmanager
#           cluster: dev-cluster
#           wait-for-service-stability: true